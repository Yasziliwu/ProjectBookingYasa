// <auto-generated />
using System;
using BookingAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookingAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.36")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookingAPI.Models.CabangUsaha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_cabang");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AlamatCabang")
                        .HasColumnType("text")
                        .HasColumnName("alamat_cabang");

                    b.Property<string>("JenisUsaha")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("jenis_usaha");

                    b.Property<string>("NamaCabang")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nama_cabang");

                    b.Property<string>("NomorTeleponCabang")
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nomor_telepon_cabang");

                    b.HasKey("Id");

                    b.ToTable("CabangUsaha");
                });

            modelBuilder.Entity("BookingAPI.Models.JenisRuanganKaraoke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_jenis_ruangan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<decimal>("HargaPerJam")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("harga_per_jam");

                    b.Property<int>("KapasitasMaksimal")
                        .HasColumnType("int")
                        .HasColumnName("kapasitas_maksimal");

                    b.Property<string>("NamaJenisRuangan")
                        .IsRequired()
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("nama_jenis_ruangan");

                    b.HasKey("Id");

                    b.ToTable("JenisRuanganKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.LayananPijat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_layanan_pijat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("DurasiMenit")
                        .HasColumnType("int")
                        .HasColumnName("durasi_menit");

                    b.Property<decimal>("Harga")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("harga");

                    b.Property<string>("NamaLayanan")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nama_layanan");

                    b.HasKey("Id");

                    b.ToTable("LayananPijat");
                });

            modelBuilder.Entity("BookingAPI.Models.Pelanggan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pelanggan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Alamat")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("alamat");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Nama")
                        .IsRequired()
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("nama_pelanggan");

                    b.Property<string>("NomorTelepon")
                        .HasColumnType("nvarchar(25)")
                        .HasColumnName("nomor_telepon");

                    b.HasKey("Id");

                    b.ToTable("Pelanggan");
                });

            modelBuilder.Entity("BookingAPI.Models.PemanduKaraoke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pemandu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Deskripsi")
                        .HasColumnType("text")
                        .HasColumnName("deskripsi");

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("jenis_kelamin");

                    b.Property<string>("NamaPemandu")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nama_pemandu");

                    b.Property<string>("NomorTelepon")
                        .HasColumnType("varchar(15)")
                        .HasColumnName("nomor_telepon");

                    b.Property<string>("StatusKetersediaan")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_ketersediaan");

                    b.HasKey("Id");

                    b.ToTable("PemanduKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.PemesananKaraoke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pemesanan_karaoke");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("IdPelanggan")
                        .HasColumnType("int")
                        .HasColumnName("id_pelanggan");

                    b.Property<int?>("PemanduKaraokeId")
                        .HasColumnType("int")
                        .HasColumnName("id_pemandu");

                    b.Property<int>("RuanganKaraokeId")
                        .HasColumnType("int")
                        .HasColumnName("id_ruangan");

                    b.Property<string>("StatusPemesanan")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_pemesanan");

                    b.Property<DateTime>("TanggalPemesanan")
                        .HasColumnType("date")
                        .HasColumnName("tanggal_pemesanan");

                    b.Property<decimal>("TotalHarga")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_harga");

                    b.Property<TimeSpan>("WaktuMulai")
                        .HasColumnType("time")
                        .HasColumnName("waktu_mulai");

                    b.Property<TimeSpan>("WaktuSelesai")
                        .HasColumnType("time")
                        .HasColumnName("waktu_selesai");

                    b.HasKey("Id");

                    b.HasIndex("IdPelanggan");

                    b.HasIndex("PemanduKaraokeId");

                    b.HasIndex("RuanganKaraokeId");

                    b.ToTable("PemesananKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.PemesananPijat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_pemesanan_pijat");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CabangUsahaId")
                        .HasColumnType("int")
                        .HasColumnName("id_cabang");

                    b.Property<int>("LayananPijatId")
                        .HasColumnType("int")
                        .HasColumnName("id_layanan_pijat");

                    b.Property<int>("PelangganId")
                        .HasColumnType("int")
                        .HasColumnName("id_pelanggan");

                    b.Property<string>("StatusPemesanan")
                        .IsRequired()
                        .HasColumnType("varchar(20)")
                        .HasColumnName("status_pemesanan");

                    b.Property<DateTime>("TanggalPemesanan")
                        .HasColumnType("date")
                        .HasColumnName("tanggal_pemesanan");

                    b.Property<int?>("TerapisId")
                        .HasColumnType("int")
                        .HasColumnName("id_terapis");

                    b.Property<decimal>("TotalHarga")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("total_harga");

                    b.Property<TimeSpan>("WaktuMulai")
                        .HasColumnType("time")
                        .HasColumnName("waktu_mulai");

                    b.Property<TimeSpan>("WaktuSelesai")
                        .HasColumnType("time")
                        .HasColumnName("waktu_selesai");

                    b.HasKey("Id");

                    b.HasIndex("CabangUsahaId");

                    b.HasIndex("LayananPijatId");

                    b.HasIndex("PelangganId");

                    b.HasIndex("TerapisId");

                    b.ToTable("PemesananPijat");
                });

            modelBuilder.Entity("BookingAPI.Models.RuanganKaraoke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_ruangan");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CabangId")
                        .HasColumnType("int")
                        .HasColumnName("id_cabang");

                    b.Property<int>("JenisRuanganId")
                        .HasColumnType("int")
                        .HasColumnName("id_jenis_ruangan");

                    b.Property<string>("NomorRuangan")
                        .IsRequired()
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("nomor_ruangan");

                    b.HasKey("Id");

                    b.HasIndex("CabangId");

                    b.HasIndex("JenisRuanganId");

                    b.ToTable("RuanganKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.Terapis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id_terapis");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("JenisKelamin")
                        .IsRequired()
                        .HasColumnType("varchar(10)")
                        .HasColumnName("jenis_kelamin");

                    b.Property<string>("NamaTerapis")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nama_terapis");

                    b.Property<string>("NomorTelepon")
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nomor_telepon");

                    b.HasKey("Id");

                    b.ToTable("Terapis");
                });

            modelBuilder.Entity("BookingAPI.Models.PemesananKaraoke", b =>
                {
                    b.HasOne("BookingAPI.Models.Pelanggan", "Pelanggan")
                        .WithMany("PemesananKaraokes")
                        .HasForeignKey("IdPelanggan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingAPI.Models.PemanduKaraoke", "PemanduKaraoke")
                        .WithMany("PemesananKaraokes")
                        .HasForeignKey("PemanduKaraokeId");

                    b.HasOne("BookingAPI.Models.RuanganKaraoke", "RuanganKaraoke")
                        .WithMany("PemesananKaraokes")
                        .HasForeignKey("RuanganKaraokeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pelanggan");

                    b.Navigation("PemanduKaraoke");

                    b.Navigation("RuanganKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.PemesananPijat", b =>
                {
                    b.HasOne("BookingAPI.Models.CabangUsaha", "CabangUsaha")
                        .WithMany("PemesananPijats")
                        .HasForeignKey("CabangUsahaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingAPI.Models.LayananPijat", "LayananPijat")
                        .WithMany("PemesananPijats")
                        .HasForeignKey("LayananPijatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingAPI.Models.Pelanggan", "Pelanggan")
                        .WithMany("PemesananPijats")
                        .HasForeignKey("PelangganId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingAPI.Models.Terapis", "Terapis")
                        .WithMany("PemesananPijats")
                        .HasForeignKey("TerapisId");

                    b.Navigation("CabangUsaha");

                    b.Navigation("LayananPijat");

                    b.Navigation("Pelanggan");

                    b.Navigation("Terapis");
                });

            modelBuilder.Entity("BookingAPI.Models.RuanganKaraoke", b =>
                {
                    b.HasOne("BookingAPI.Models.CabangUsaha", "CabangUsaha")
                        .WithMany("RuanganKaraokes")
                        .HasForeignKey("CabangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BookingAPI.Models.JenisRuanganKaraoke", "JenisRuanganKaraoke")
                        .WithMany("RuanganKaraokes")
                        .HasForeignKey("JenisRuanganId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CabangUsaha");

                    b.Navigation("JenisRuanganKaraoke");
                });

            modelBuilder.Entity("BookingAPI.Models.CabangUsaha", b =>
                {
                    b.Navigation("PemesananPijats");

                    b.Navigation("RuanganKaraokes");
                });

            modelBuilder.Entity("BookingAPI.Models.JenisRuanganKaraoke", b =>
                {
                    b.Navigation("RuanganKaraokes");
                });

            modelBuilder.Entity("BookingAPI.Models.LayananPijat", b =>
                {
                    b.Navigation("PemesananPijats");
                });

            modelBuilder.Entity("BookingAPI.Models.Pelanggan", b =>
                {
                    b.Navigation("PemesananKaraokes");

                    b.Navigation("PemesananPijats");
                });

            modelBuilder.Entity("BookingAPI.Models.PemanduKaraoke", b =>
                {
                    b.Navigation("PemesananKaraokes");
                });

            modelBuilder.Entity("BookingAPI.Models.RuanganKaraoke", b =>
                {
                    b.Navigation("PemesananKaraokes");
                });

            modelBuilder.Entity("BookingAPI.Models.Terapis", b =>
                {
                    b.Navigation("PemesananPijats");
                });
#pragma warning restore 612, 618
        }
    }
}
